#!/usr/bin/env python3
"""
Script de configuration automatique du projet de reconnaissance d'√©motions vocales
"""

import os
import sys
import zipfile
import requests
from pathlib import Path
import shutil

# Ajouter le r√©pertoire parent au path pour importer config
sys.path.append(str(Path(__file__).parent.parent))

from config import *

def download_emodb_dataset():
    """
    T√©l√©charger le dataset EMO-DB (simulation - URL fictive)
    En r√©alit√©, vous devrez t√©l√©charger manuellement depuis http://emodb.bilderbar.info/
    """
    print("üì• T√©l√©chargement du dataset EMO-DB...")
    
    # Cr√©er un fichier README pour expliquer comment obtenir les donn√©es
    readme_data = """# Donn√©es EMO-DB

Ce dossier contient les fichiers audio du corpus Berlin Database of Emotional Speech (EMO-DB).

## Comment obtenir les donn√©es

1. Visitez http://emodb.bilderbar.info/
2. T√©l√©chargez le corpus complet
3. Extrayez les fichiers .wav dans ce dossier

## Structure attendue

```
data/emodb/
‚îú‚îÄ‚îÄ 03a01Fa.wav
‚îú‚îÄ‚îÄ 03a01Nc.wav
‚îú‚îÄ‚îÄ 03a01Wa.wav
‚îî‚îÄ‚îÄ ... (autres fichiers .wav)
```

## Format des noms de fichiers

Les noms de fichiers suivent le format : `XXaYYZz.wav`
- XX : Num√©ro de session
- a : Sexe du locuteur (a=male, b=female)
- YY : Num√©ro d'√©nonc√©
- Z : √âmotion (W=col√®re, L=ennui, E=d√©go√ªt, A=peur, F=joie, T=tristesse, N=neutre)
- z : Intensit√© (a=forte, b=moyenne, c=faible, d=tr√®s faible)

## Note

Les fichiers audio ne sont pas inclus dans ce repository pour des raisons de taille.
"""
    
    with open(EMODB_DIR / "README.md", "w", encoding="utf-8") as f:
        f.write(readme_data)
    
    print("‚úì Fichier README cr√©√© dans data/emodb/")
    print("‚ö†Ô∏è  Veuillez t√©l√©charger manuellement les donn√©es depuis http://emodb.bilderbar.info/")

def create_sample_data():
    """Cr√©er des donn√©es d'exemple pour les tests"""
    print("üìù Cr√©ation de donn√©es d'exemple...")
    
    # Cr√©er un fichier d'exemple
    sample_data = {
        "emotions": ["col√®re", "ennui", "d√©go√ªt", "peur", "joie", "tristesse", "neutre"],
        "sample_files": [
            "03a01Fa.wav",  # joie forte
            "03a01Nc.wav",  # neutre faible
            "03a01Wa.wav",  # col√®re forte
        ],
        "total_files": 535,
        "sample_rate": 16000,
        "duration": 3.0
    }
    
    import json
    with open(DATA_DIR / "sample_data.json", "w", encoding="utf-8") as f:
        json.dump(sample_data, f, indent=2, ensure_ascii=False)
    
    print("‚úì Donn√©es d'exemple cr√©√©es")

def setup_project():
    """Configuration compl√®te du projet"""
    print("üöÄ Configuration du projet de reconnaissance d'√©motions vocales...")
    
    # Cr√©er les r√©pertoires
    create_directories()
    
    # Cr√©er le dossier logs
    log_dir = PROJECT_ROOT / "logs"
    log_dir.mkdir(exist_ok=True)
    
    # Cr√©er le dossier cache
    CACHE_DIR.mkdir(exist_ok=True)
    
    # Cr√©er le dossier scripts s'il n'existe pas
    scripts_dir = PROJECT_ROOT / "scripts"
    scripts_dir.mkdir(exist_ok=True)
    
    # T√©l√©charger les donn√©es
    download_emodb_dataset()
    
    # Cr√©er des donn√©es d'exemple
    create_sample_data()
    
    # Cr√©er un fichier .env.example
    env_example = """# Configuration de l'environnement
# Copiez ce fichier vers .env et modifiez les valeurs selon vos besoins

# Configuration de l'API
API_HOST=0.0.0.0
API_PORT=8000

# Configuration de la base de donn√©es (si applicable)
DATABASE_URL=sqlite:///./emotion_db.sqlite

# Configuration des logs
LOG_LEVEL=INFO

# Cl√©s API (si n√©cessaire)
API_KEY=your_api_key_here
"""
    
    with open(PROJECT_ROOT / ".env.example", "w", encoding="utf-8") as f:
        f.write(env_example)
    
    print("‚úì Fichier .env.example cr√©√©")
    
    print("\nüéâ Configuration termin√©e !")
    print("\nüìã Prochaines √©tapes :")
    print("1. T√©l√©chargez les donn√©es EMO-DB depuis http://emodb.bilderbar.info/")
    print("2. Placez les fichiers .wav dans data/emodb/")
    print("3. Installez les d√©pendances : pip install -r requirements.txt")
    print("4. Entra√Ænez le mod√®le : python train.py")
    print("5. Lancez l'API : python main_api.py")
    print("6. Lancez l'interface : streamlit run app.py")

if __name__ == "__main__":
    setup_project() 